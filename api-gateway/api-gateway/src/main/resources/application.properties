spring.application.name=api-gateway
server.port=8080

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Define routes for each service via the API Gateway

# Hotel Service Routes
spring.cloud.gateway.routes[0].id=hotel-service
spring.cloud.gateway.routes[0].uri=lb://HOTEL-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/hotels/**

# Reservation Service Routes (within Hotel Service)
spring.cloud.gateway.routes[1].id=hotel-service-reservations
spring.cloud.gateway.routes[1].uri=lb://HOTEL-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/reservations/**

# User Service Routes
spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**

# Reservation Service Routes (within Flight Service)
spring.cloud.gateway.routes[3].id=flight-service
spring.cloud.gateway.routes[3].uri=lb://Flight-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/flights/**

# Reservation Service Routes (within Car Service)
spring.cloud.gateway.routes[4].id=car-service-reservations
spring.cloud.gateway.routes[4].uri=lb://CAR-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/car-reservations/**

spring.cloud.gateway.routes[5].id=car-service
spring.cloud.gateway.routes[5].uri=lb://CAR-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/cars/**

spring.cloud.gateway.routes[6].predicates[0]=Path=/api/front/**
spring.cloud.gateway.routes[6].uri=lb://AgenceVoyageFront
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/api/front/(?<segment>.*), /$\\{segment}


# Enable reactive web support
spring.main.web-application-type=reactive

# Eureka client settings
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.hibernate.SQL=DEBUG
